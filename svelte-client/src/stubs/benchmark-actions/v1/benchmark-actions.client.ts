// @generated by protobuf-ts 2.9.0
// @generated from protobuf file "benchmark-actions/v1/benchmark-actions.proto" (syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { BenchmarkActionsService } from "./benchmark-actions";
import type { BigDbFetchResponse } from "./benchmark-actions";
import type { BigDbFetchRequest } from "./benchmark-actions";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { BigArrayProcessResponse } from "./benchmark-actions";
import type { BigArrayProcessRequest } from "./benchmark-actions";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service BenchmarkActionsService
 */
export interface IBenchmarkActionsServiceClient {
    /**
     * Unary
     *
     * @generated from protobuf rpc: BigArrayProcess(BigArrayProcessRequest) returns (BigArrayProcessResponse);
     */
    bigArrayProcess(input: BigArrayProcessRequest, options?: RpcOptions): UnaryCall<BigArrayProcessRequest, BigArrayProcessResponse>;
    /**
     * @generated from protobuf rpc: BigDbFetch(BigDbFetchRequest) returns (BigDbFetchResponse);
     */
    bigDbFetch(input: BigDbFetchRequest, options?: RpcOptions): UnaryCall<BigDbFetchRequest, BigDbFetchResponse>;
}
/**
 * @generated from protobuf service BenchmarkActionsService
 */
export class BenchmarkActionsServiceClient implements IBenchmarkActionsServiceClient, ServiceInfo {
    typeName = BenchmarkActionsService.typeName;
    methods = BenchmarkActionsService.methods;
    options = BenchmarkActionsService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * Unary
     *
     * @generated from protobuf rpc: BigArrayProcess(BigArrayProcessRequest) returns (BigArrayProcessResponse);
     */
    bigArrayProcess(input: BigArrayProcessRequest, options?: RpcOptions): UnaryCall<BigArrayProcessRequest, BigArrayProcessResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<BigArrayProcessRequest, BigArrayProcessResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: BigDbFetch(BigDbFetchRequest) returns (BigDbFetchResponse);
     */
    bigDbFetch(input: BigDbFetchRequest, options?: RpcOptions): UnaryCall<BigDbFetchRequest, BigDbFetchResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<BigDbFetchRequest, BigDbFetchResponse>("unary", this._transport, method, opt, input);
    }
}
